!function() {
    function t(t) {
        var e;
        switch (n) {
          case 1:
            e = s;
            break;

          case 2:
            e = i;
            break;

          case 3:
            e = o;
            break;

          case 4:
            e = u;
        }
        var c = g(t, e), d = !0, p = !0;
        void 0 === c[3] && (p = !1, void 0 === c[2] && (d = !1));
        var v = parseInt(c[0], 36) - 10, h = parseInt(c[1]) - 1, f = parseInt(c[2]) - 1, b = parseInt(c[3]) - 1, l = d ? a[f][0] / 3 : 0, m = d ? a[f][1] / 3 : 0, I = p ? a[b][0] / 9 : 0, A = p ? a[b][1] / 9 : 0, M = v + l + I, y = h + m + A, k = 0;
        return k = d || p ? p ? 1 / 9 : 1 / 3 : 1, [ M * r, y * r, k * r ];
    }
    function e(t, e) {
        var n = t[0], r = t[1], a = t[2], s = e[0], i = e[1], o = e[2];
        return [ Math.hypot(s - n, i - r), Math.hypot(a, o) ];
    }
    var n = 2, r = 300, a = [ [ 0, 2 ], [ 1, 2 ], [ 2, 2 ], [ 0, 1 ], [ 1, 1 ], [ 2, 1 ], [ 0, 0 ], [ 1, 0 ], [ 2, 0 ] ], s = /^([A-Za-z])([1-9]|1[0-9])(?:\-[Kk][Pp]?(\d)(?:\-(\d))?)?$/, i = /^([A-Za-z])([1-9]|1[0-9])(?:(?:[Kk][Pp]?)?(\d)(\d)?)?$/, o = /^([A-Za-z])([1-9]|1[0-9])(?:\s+(\d)(?:\s+(\d))?)?$/, u = /^([A-Za-z])([1-9]|1[0-9])(?:\s+(\d)(\d)?)?$/, c = {}, d = {}, p = [ [ 50, 1579 ], [ 100, 1558 ], [ 150, 1538 ], [ 200, 1517 ], [ 250, 1496 ], [ 300, 1475 ], [ 350, 1453 ], [ 400, 1431 ], [ 450, 1409 ], [ 500, 1387 ], [ 550, 1364 ], [ 600, 1341 ], [ 650, 1317 ], [ 700, 1292 ], [ 750, 1267 ], [ 800, 1240 ], [ 850, 1212 ], [ 900, 1183 ], [ 950, 1152 ], [ 1e3, 1118 ], [ 1050, 1081 ], [ 1100, 1039 ], [ 1150, 988 ], [ 1200, 918 ], [ 1250, 800 ] ], v = 180 / Math.PI, h = function(t) {
        if (t < 50) return c;
        if (t > 1250) return d;
        var e, n, r, a, s, i, o, u, v, h;
        for (e = 0; e < p.length; e++) {
            if (n = p[e], r = p[e + 1], a = n[0], s = n[1], t === a) return s;
            if (!((i = r[0]) <= t)) return o = r[1], u = i - a, v = o - s, h = t - a, Math.round(v / u * h + s);
        }
    }, f = function(t, e) {
        var n = t[0], r = t[1], a = e[0], s = e[1], i = a - n, o = s - r, u = Math.hypot(i, o), c = i / u, d = o / u, p = Math.atan2(d, c), h = p * v;
        return 0 === c && 1 === d ? 180 : a > n && s >= r ? h + 90 : a >= n && s < r ? h + 90 : a < n && s >= r ? h + 90 : a <= n && s < r ? 180 - Math.abs(h) + 270 : void 0;
    }, g = function(t, e) {
        return t.match(e).slice(1);
    }, b = document.getElementById("i1"), l = document.getElementById("i2"), m = document.getElementById("type"), I = document.getElementById("output"), A = function(t, e) {
        return t = t === d ? 800 : t, e = e === c ? 1579 : e, "(min: " + (t = t < 0 ? 0 : t) + ", max: " + e + ")";
    }, M = function() {
        try {
            var n, r = b.value, a = l.value, s = t(r), i = t(a), o = e(s, i), u = o[0], p = o[1], v = u.toFixed(1), g = u - p, m = u + p, M = g.toFixed(1), y = m.toFixed(1), k = h(m), E = h(u), x = h(g), P = u ? parseInt(f(s, i)) : 0;
            n = E !== c && E !== d ? E + "</strong> <span>" + A(k, x) + "</span>" : E === d ? "Out of Range</strong>" : "Too Close</strong>";
            var B = "Distance: <strong>" + v + "m</strong> <span>" + A(M, y) + "</span>", L = "Milliradian: <strong>" + n, z = "Bearing: <strong>" + P + " degrees</strong>";
            I.innerHTML = B + "<br>" + L + "<br>" + z;
        } catch (t) {
            I.innerHTML = "&nbsp;<br>&nbsp;<br>&nbsp;";
        }
    }, y = function(t) {
        M();
    }, k = function() {
        var t;
        switch (n) {
          case 1:
            t = "A1-KP1-1";
            break;

          case 2:
            t = "A111";
            break;

          case 3:
            t = "A1 11";
            break;

          case 4:
            t = "A1 1 1";
        }
        b.setAttribute("placeholder", "Position 1 (ex: '" + t + "')"), l.setAttribute("placeholder", "Position 2 (ex: '" + t + "')");
    }, E = function(t) {
        n = parseInt(m.value), k(), M();
    };
    b.addEventListener("input", y), l.addEventListener("input", y), m.addEventListener("change", E), 
    k();
}();